name: CI tests

on:
  release:
    types: [published]

permissions:
  contents: read
  packages: write

env:
  LINTING_PY_VERSION: "3.11"  # The version of Python to use for linting (typically the minimum supported)

jobs:

  rebuild-and-push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 2

    - uses: docker/setup-buildx-action@v3

    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Grab tags from the GitHub event to tag the image
    - uses: docker/metadata-action@v5
      id: metadata
      with:
        images: |
          name=ghcr.io/datalab-industries/csd-optimade

    - run: |
        docker images
        docker pull ghcr.io/datalab-industries/csd-optimade
        docker images

    # With some luck, this does not need any CSD installer URL mounted
    # as only the final layers change
    - name: Build and push latest changes
      env:
        CSD_ACTIVATION_KEY: ${{ secrets.CSD_ACTIVATION_KEY }}
        CSD_INSTALLER_URL: ${{ secrets.CSD_INSTALLER_URL }}
      uses: docker/bake-action@v6
      with:
        source: "."
        targets: "csd-optimade-server"
        pull: true
        push: true
        load: true
        set: |
          *.output=type=docker,compression=zstd
